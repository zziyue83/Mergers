import pandas as pd
import numpy as np

def clean_data(modules, code, df):

	modules1 = ['5026', '5027', '5028', '5029', '5030', '5031']
	modules2 = ['1491', '1492', '1493', '1497', '1498', '1501', '1511', '1533', '1536', '8620']
	modules3 = ['7460']
	modules4 = ['1166', '1168']
	modules5 = ['8462']
	modules6 = ['6009']
	modules7 = ['8463']
	modules8 = ['8429', '8520']
	modules9 = ['8457']
	modules10 = ['8451']
	modules11 = ['8607']
	modules12 = ['5000', '5001', '5005', '5010', '5015', '5020']
	modules13 = ['8429', '8520']
	modules14 = ['8462']
	modules15 = ['4005']


	if any(item in modules1 for item in modules):
		df.loc[(df.multi * df.size1_amount == 1986) & (df.size1_units == 'OZ'), 'size1_units'] = 'ML'
		df.loc[(df.multi * df.size1_amount == 2130) & (df.size1_units == 'OZ'), 'size1_units'] = 'ML'

	elif any(item in modules2 for item in modules):
		df.loc[(df.multi * df.size1_amount == 87) & (df.size1_units == 'OZ'), 'size1_amount'] = .87

	elif any(item in modules3 for item in modules):
		df.loc[(df.multi * df.size1_amount == 200) & (df.size1_units == 'OZ'), 'size1_units'] = 'CT'

	elif any(item in modules4 for item in modules):
		df.loc[df.size1_units == 'CT', 'size1_amount'] = df.size1_amount[df.size1_units == 'CT'] * 3.75
		df.loc[df.size1_units == 'CT', 'size1_units'] = 'OZ'

	elif any(item in modules5 for item in modules):
		df.loc[(df.multi * df.size1_amount == 39) & (df.size1_units == 'OZ'), 'size1_amount'] = 0.039

	elif any(item in modules6 for item in modules):
		df.loc[(df.multi * df.size1_amount == 4.6) & (df.size1_units == 'OZ'), 'size1_amount'] = 4
		df.loc[(df.multi * df.size1_amount == 0.005) & (df.size1_units == 'OZ'), 'size1_amount'] = 5
		df.loc[df.size1_units == 'OZ', 'size1_units'] = 'CT'

	elif any(item in modules7 for item in modules):
		df.loc[(df.multi * df.size1_amount == 32) & (df.size1_units == 'OZ'), 'size1_amount'] = 0.32

	elif any(item in modules8 for item in modules):
		df.loc[(df.size1_amount == 15) & (df.multi == 1 )& (df.size1_units == 'OZ'), 'size1_amount'] = 0.15
		df.loc[(df.size1_amount == 25) & (df.multi == 1 )& (df.size1_units == 'OZ'), 'size1_amount'] = 0.25
		df.loc[(df.size1_amount == 35) & (df.multi == 1 )& (df.size1_units == 'OZ'), 'size1_amount'] = 0.35
		df.loc[(df.size1_amount == 150) & (df.multi == 1 )& (df.size1_units == 'OZ'), 'size1_amount'] = 0.15

	elif any(item in modules9 for item in modules):
		df.loc[(df.size1_amount > 100) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/100
		df.loc[(df.size1_amount > 1) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/10

	elif any(item in modules10 for item in modules):
		df.loc[(df.size1_amount > 1.99) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/10

	elif any(item in modules11 for item in modules):
		df.loc[(df.size1_amount > 10) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/100
		df.loc[(df.size1_amount > 6) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/10

	elif any(item in modules12 for item in modules):
		df.loc[(df.multi * df.size1_amount == 2500) & (df.size1_units == 'CT'), 'size1_units'] = 'ML'

	elif any(item in modules13 for item in modules):
		df.loc[(df.multi * df.size1_amount == 150) & (df.size1_units == 'OZ'), 'size1_amount'] = .15

	elif any(item in modules14 for item in modules):
		df.loc[(df.multi * df.size1_amount == 39) & (df.size1_units == 'OZ'), 'size1_amount'] = .04

	elif code == '1965711020_1':
		val_list=[1291404450,3126200788,3126200858,3500068625,3500068626,3700001796,
		6905581168,6905581262,6905581513,6905581584,
		6905581676,6905581795,6905582156,6905582425,
		6905582442,6905582452,6905582453,6905582666,
		6905582959,6905583074,6905583075,6905583076,
		6905583092,6905583311,6905583312,6905585803,
		6905585816,6905585822,31031032363,65356915893,
		65356915894,65356915896,65356915897,65356915898,
		65356916008,65356916010,65356916011,65356916012,
		65356917473,65356918678,65356918682,65356918684,
		65356920609,65356922139,65356924128,65356924498,
		65356925209,65356925210,65356925211,65356925529,
		65356926594,65356926618,65356928395,65356928397,
		65356928398,65356928399,65356928400,65356928401,
		65356928402,65356928403,65356928404,65356928429,
		65356928606,65356928649,65356929439,65356929440,
		65356929441,65356929463,65356929500,65356930357,
		65356930359,65356930360,65356930361,65356930362,
		65356930363,65356930366,65356930367,65356930370,
		65356930371,65356931127,65356931863,65356931865,
		65356931866,65356931961,65356932086,65356932755,
		65356932756,65356932757,65356935974,65356936609,
		65356936610,65356936611,65356936612,65356938394,
		65356938398,65356938400,65356938401,65356938402,
		65356938831,65356938832,65356938833,65356938834,
		65356938835,65356938836,67293510978,75207700434,
		75207700440,75207700455,75207700489,76687800029,
		76687800033,76687800035,76687800039,76687800059,
		76687800060,76687800106,76687800125,76687800126,
		76687800135,76687800149,76687800247,76687800265,
		76687800270,76687800275,76687800286,76687800365,
		76687810001,76687820011,76687820012,76687820013,
		76687820014,76687820015,76687820023,76687830001]
		# Keep only kids segment in 'ORAL HYGIENE APPLIANCE AND ACCESSORY' module
		df=df.loc[df['upc'].isin(val_list)]


	elif code == '1965711020_2':
		val_list=[36006500,36006600,1111035335,1111079743,1111383159,1111383359,1182202493,
		1182237253,1233300277,1291404550,1330844471,1500076083,1512701543,2316704073,
		3003405014,3003460336,3126200870,3225109887,3457567784,3500055342,3500055355,
		3500055359,3500055401,3500055402,3500055533,3500055853,3500055856,3500055857,
		3500055858,3500055859,3500055875,3500056000,3500056001,3500056005,3500056010,
		3500056011,3500056013,3500056015,3500056016,3500056201,3500056204,3500056205,
		3500056206,3500056213,3500056214,3500056216,3500056218,3500058401,3500058402,
		3500068692,3500068699,3520300075,3582605937,3680005107,3680015688,3680060062,
		3700000285,3700000290,3700000373,3901513000,4113033118,4113048268,4113050521,
		4119021369,4122019495,4124013653,4125096082,4126814003,4126815797,4131014233,
		4152031101,4152087462,4152087980,4173508426,4567465455,4656791142,4741400501,
		4902222080,4902234479,4902237886,4902239459,4902244264,4902244265,4934708007,
		4934708008,4970578894,4970578962,4970578982,5042812450,5218110442,5218132313,
		5218149924,5221300008,5221300009,5310000126,5310000129,5310000131,5310000132,
		5310000133,5310000135,5310000139,5310000261,5310012071,5310020131,5800000025,
		5800000504,6010712107,6010783324,6010790361,6905580681,6905580922,6905581241,
		6905581585,6905581904,6905582147,6905582148,6905582415,6905582416,6905582417,
		6905582418,6905582419,6905582420,6905582449,6905582450,6905582608,6905582673,
		6905582780,6905583302,6905583727,6905583805,6905584135,6905584143,6905584201,
		6905584940,6905584948,6905584955,6905584956,6905585228,6905585231,6905585489,
		6905585847,6905586057,6905586058,7003860631,7094200114,7094200216,7094200217,
		7094212153,7094212163,7094212303,7094212304,7094212459,7094212519,7094240218,
		7103119120,7103119951,7103131000,7103161140,7150308121,7200017458,7421309317,
		7421309318,7421309319,7421309321,7421309322,7421309323,7545024991,7582866907,
		7675700008,7789090533,8040000022,8040000027,8040000037,8040000063,8040000091,
		8040000098,8040000099,8040000265,8040000541,8040000608,8040001368,8126711257,
		8126711326,8126712002,8126712149,8126792520,8457911758,8480599233,8517800108,
		8517800109,8517811001,8770190485,8997640673,9460600129,9460600365,9460602129,
		9629511332,30041081200,30041081465,30041662122,30041663214,30041663217,
		30041663220,30041663223,30041663457,30041663590,30041664289,30041664290,
		30041664778,30041665028,30041667263,30041667813,30041667814,30041667815,
		30041667816,31031032361,31031032362,37675700008,38137007098,38137007792,
		38137007894,38137009198,38137009528,38137009644,38137009788,38137009789,
		38137009790,38137009869,61429939724,63174002010,63873031755,63927741841,
		63927770948,63927776149,65108022155,65108072706,67293510256,67293510257,
		67293510861,67293510866,67293510876,67293510966,67293568006,67293571001,
		67293571020,67293576966,67293577966,67293578104,67293578117,67293578132,
		67293578134,67293581001,67293583005,67293583051,67293583055,68560334255,
		68616911609,71578902170,71785120044,71928329024,71928359350,71928374142,
		71928396679,72100314283,72100314310,72100314385,72100314443,72543993507,
		72543996262,72919301540,72919301546,73101505369,73101507826,73101509639,
		76023635359,76687800011,76687800012,78070700399,78891435408,79813632003,
		83152700356,83152700411,84078708528,84098601258,84529607581,84529607642,
		84533100243,84603600098,85733100035,85737100031,87129000262,87219758464,
		87219758473,88439249008,88439255273,89842300023,89842300039,89842300047,
		89842300053,89842300055,89842300067,89842300071,750107263702]
		# Keep only kids segment in 'ORAL HYGIENE BRUSHES' module
		df=df.loc[df['upc'].isin(val_list)]

	elif code == '1965711020_3':
		val_list=[36000007,36000008,37000003,1111035860,
		1111035861,1111035862,1111035863,1111302280,
		1111315120,1111318660,1111319120,1111320202,
		1111320400,1111322060,1111322410,1111322420,
		1111322430,1111329780,1111341101,1121389316,
		1182236055,1182293413,1182293414,1182293415,
		2090800976,2260000010,2727520002,2727520003,
		2727520004,2836783155,2836783156,2836783425,
		2836783426,2836783427,2836783593,2836783624,
		2836783625,3320015120,3320019120,3320020202,
		3320020230,3320020240,3320020260,3320020270,
		3320020615,3320020620,3320020630,3320020635,
		3320020636,3320022060,3320022240,3320022305,
		3320022310,3320022325,3320022340,3320022345,
		3320022350,3320022355,3320022360,3320022375,
		3320022380,3320022410,3320022430,3320022460,
		3320022465,3320022470,3320025381,3320025390,
		3320026105,3320029780,3320041101,3320074374,
		3320090900,3457516986,3457516988,3500052100,
		3500052101,3500052102,3500052509,3500052532,
		3500052541,3500052543,3500052545,3500052546,
		3500052549,3500052550,3500052551,3500056100,
		3500074317,3500078236,3600073560,3623906102,
		3700000020,3700000275,3700000338,3700000349,
		3700000374,3700000381,3700000382,3700000399,
		3700004987,3700004988,3700006376,3700013909,
		3700013911,3700019720,3700024247,3700029026,
		3700029483,3700031498,3700045307,3700045308,
		3700045309,3700048869,4016810006,4116340623,
		4116340624,4125003209,4125003211,4126033051,
		4126033052,4126034975,4141500072,4141503472,
		4161100008,4175300007,4815590819,4858200204,
		4858200420,4858200425,4933643150,4933643400,
		4933643650,4933643700,4933643750,4933643900,
		4933644800,4933646300,4933647300,4933675900,
		4933676900,5042808088,5052520000,5310000299,
		5310000303,5310000305,5310000309,5310000310,
		5310000315,5310000317,5310000321,6565690928,
		6830563229,6830563230,6830563233,6830563235,
		7094201720,7094230267,7094277898,7545025057,
		7559573102,7559573103,7559573105,7666000884,
		7732610104,7732610106,7732610204,7732610206,
		7732610306,7732610806,7732611001,7732611006,
		7732611440,7732611506,7732612104,7732612106,
		7732612204,7732612904,7732613247,7732613248,
		7732613677,7732613806,7732613840,7732614006,
		7732614104,7732615406,7732615440,7732615506,
		7732615901,7732615904,7732615906,7732615940,
		7732616206,7732616506,7732616540,7732616906,
		7732617006,7732617040,7732617306,7732619301,
		7732619306,7732619340,7732619701,7732619704,
		7732619740,7732691046,7732691101,7732691146,
		7732691246,7732691346,7732691446,7732691546,
		7761000001,7761000003,7761000004,7761000005,
		7834700152,7834700153,7834700154,7834700155,
		7834703025,7834703034,7834703035,7834703036,
		7834703038,7834703039,7834703065,7852200150,
		7852200152,7852200728,7852200729,7852201500,
		7852201510,7852201515,7852201520,7852201531,
		7852201535,7852201545,7852201551,7852261847,
		7852261894,8085200157,8085200168,8300001640,
		9550816371,9550816373,9550819802,9746706720,
		9746706725,18543100017,18722400048,30041663663,
		30041664872,30041665006,30041665007,30041665029,
		30041665264,30041665499,30041665500,30041666841,
		30041667540,30041667740,30696938474,31015886075,
		31015888500,31015888600,31031032250,31031032294,
		31031032299,31031032300,31031032301,31031032302,
		31031032331,31031032406,31031032407,31031032460,
		31031032463,31031032482,31031033972,31031033973,
		31191706259,33436200004,61332500001,61332500002,
		61332500030,63779250003,63779250005,63919401062,
		63919401063,63919402271,64769210701,64769213501,
		66618300046,67293510329,67293510369,67293510370,
		67293510373,67293510440,67293510444,69702912612,
		69956231036,70059600050,71413200056,71413200063,
		71833422001,71833422052,71833422053,71833422055,
		71833422081,71833422083,71833422084,71833430087,
		71833430088,71833430089,73295305040,73373908090,
		73373908091,73373908092,74147277211,74466500218,
		74973210021,75207700437,75907285000,78973810040,
		79285000235,79285000237,79285000264,79285007299,
		79285007399,79285072699,81445701018,81445701019,
		85013200200,85013200202,87092900902,87831400257,
		87901000027,89189100001,89340700023,89611400000,
		400163809063,400163809085,400163809086,400163809801,
		400163809802,400163809804,400163809808,400163809809,
		401764500827,629106920630,629106920640,844586000067]
		# Keep only kids segment in 'TOOTH CLEANERS' module
		df=df.loc[df['upc'].isin(val_list)]

	elif any(item in modules15 for item in modules):
	# These are data issues on blushers
		df.loc[(df.size1_amount == 0.018000000000000002) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = 18


	elif code =='1985197040_1':
		val_list=[1057916016,1195165011,1540019424,1540019433,
		1752422210,1752451310,1752451312,1752451315,
		1752451325,1752451337,1752451516,1752452116,
		1752461110,1752470001,1752481100,1855400005,
		1889490044,1889490045,1889490056,1889490057,
		2178381102,2400003034,2400004447,2400005988,
		2400030348,2400039332,2400050788,2400057744,
		2500002657,2873301616,2873350019,3003430029,
		3003430047,3003430329,3003430339,3022308050,
		3214300708,3338340001,3338340002,3338340004,
		3338340010,3338340110,3380310103,3597118010,
		3597118108,3597139991,3648700000,3680030776,
		3680030777,3784203043,3823219078,3823232037,
		3823232328,3823234251,3823236450,3823237612,
		3823280900,3825978059,3825978085,3853760001,
		3853762001,3853771001,3853780001,3855001152,
		3890007118,3890007160,3963996062,3963996095,
		3977955261,4113059518,4113059519,4113070158,
		4113070159,4116300644,4116340644,4116396000,
		4116397657,4119004278,4122018913,4122065659,
		4124020028,4126815116,4126815125,4126815143,
		4126815316,4126815317,4126815318,4126815326,
		4126815327,4126815618,4126815621,4126816400,
		4126819017,4128292823,4141502585,4141506385,
		4149702330,4149707239,4149707242,4279780118,
		4279796144,4279796154,4312607150,4312607163,
		4312607200,4500906738,4500906744,4500906795,
		4500906945,4500907068,4500911560,4525512594,
		4592710482,4656771696,5037211500,5037211600,
		5037211700,5037211800,5037211900,5349503007,
		5349507007,5349507045,5349507090,5349509078,
		5349509203,6024301130,6024301141,6602200139,
		7078403350,7078403377,7122816109,7122816207,
		7122816209,7122816216,7122816222,7127992205,
		7143000984,7143000988,7175245132,7175246110,
		7175246111,7196296787,7203688052,7203688059,
		7243128000,7243128001,7243165311,7243166006,
		7243166014,7243166023,7243166027,7448900001,
		7464100146,7464100254,7464100285,7464100304,
		7464100509,7464100511,7464100606,7464101146,
		7464101186,7464101304,7464101511,7464101613,
		7464102001,7464103277,7464103285,7464110801,
		7490400010,7490400035,7490400099,7490400100,
		7490400101,7490404234,7490406002,7490406003,
		7490406004,7490420007,7490420023,7490420032,
		7490420037,7490420057,7490420137,7490470001,
		7545000152,7545000154,7545050014,7545050078,
		7582820416,7582823583,7582875977,7663751197,
		7663751511,7663751645,7663751719,7663752218,
		7663753093,7774521776,7774521898,7774521965,
		7774522354,7774522399,7774522944,7774523255,
		7774523329,7774523471,7774523472,7774523542,
		7774523756,7774523757,7789023095,7789026001,
		7789029025,7789051281,7789095645,7789095648,
		7789095651,7945384533,8151760354,8185183311,
		8185183318,8869478144,8869478155,8956305391,
		8956306131,8956306136,9005420050,9250474051,
		9282505888,9282571445,9316311012,9316336557,
		9316336559,9492277858,9492277859,9492282665,
		9492287690,9530966101,9563103275,9563103277,
		9799208501,9848720330,9848720338,17524611110,
		18298600002,18298600005,36487000011,60117210539,
		60117210547,60117210646,60117220547,60117220653,
		60117230547,60260204662,60260204663,60260204673,
		60422591792,60504925975,60504928195,60504933636,
		60831200492,61001407657,61001409436,61046210201,
		61057903516,61420014952,61619910009,61619910029,
		61619912009,61619914009,61619914029,61619916019,
		61619918006,61619920006,61786217110,63891410141,
		63891410142,64034401036,64034401437,64034401439,
		64034401441,64034401443,64312507205,64312604011,
		64312607150,64312607151,64312607163,64312607164,
		64312607166,64312607167,64312607169,64312607184,
		64312607186,64312607198,64312607200,64312607212,
		64312607213,64312697165,64779300155,64779300157,
		64779300161,64796006005,64796006016,65357191111,
		66785904320,67448900001,67448900002,68692411805,
		68692411823,68692435509,68692442914,68692472889,
		68692472906,68692472954,68692475008,68692475016,
		68692482000,68692482995,70176165196,70176165200,
		70176166190,70176166195,70176166200,70176167200,
		70882057702,71685480654,71685480659,71685480750,
		71685480774,71685480872,71752411101,71752411105,
		71752411106,71752411107,71752411114,71752411115,
		71752420013,71752420019,71752420021,71752420025,
		71752420115,71752422210,71752451112,71752451212,
		71752451301,71752451303,71752451305,71752451310,
		71752451312,71752451313,71752451314,71752451315,
		71752451316,71752451317,71752451318,71752451323,
		71752451324,71752451325,71752451326,71752451332,
		71752451333,71752451334,71752451335,71752451336,
		71752451337,71752451340,71752451343,71752451357,
		71752451358,71752451362,71752451363,71752451365,
		71752451366,71752451370,71752451374,71752451378,
		71752451382,71752451389,71752451390,71752451510,
		71752451518,71752451520,71752452112,71752452116,
		71752452212,71752461100,71752461109,71752461110,
		71752470001,71752470020,71752471976,71752477791,
		71752480409,71752480873,71752481101,71752481102,
		71752481104,71812225028,71812225078,71812906522,
		71812906523,71965891008,72251570111,72251570152,
		72619100405,73380310103,73382777012,74124301400,
		74592704061,74592708044,74592710482,74592711264,
		74592712341,75480778010,75887010098,75887022002,
		75887031510,75887032748,75887032779,75887032912,
		75887032955,76235707716,76245300189,78279600032,
		78279600139,78279600706,78279600730,78610811002,
		79934104029,79934104430,81005101008,81112801001,
		81305501016,82178381102,82655322009,82676621700,
		82676621702,82676621703,82676621706,82676621708,
		82676621712,82676621713,82676621715,82676621720,
		82676621729,82676621730,82676621732,82676626009,
		82676626036,82838300004,83214300108,83214300708,
		83214300800,83214300808,83361400100,83361400101,
		83361400104,83361400107,83469400002,83787700001,
		84501500000,85123100145,85123100165,85123100175,
		85270300045,85790300100,87762900185,87762900187,
		88122374637,88194500001,88194500060,88194500100,
		88194581008,88194581009,88194581010,88194581011,
		88194588102,88310900000,88361600001,88361600002,
		88361600024,89049300405,89170700200,89170700214,
		89205600141,89906200215,89906200216,400000705099,
		401407105115,505037211410,505037211500,505037211600,
		505037211700,505037211710,505037211800,505037211900,
		505037212600,505037212700,539700502201,539700502202,
		539700502203,539700502204,539700503201,539700503202,
		539700503203,539700503204,539700504202,539700504204,
		740400390002,744101990000,744300457000,744300594001,
		744300657001,744300763001,744300928001,750300587801,
		750300982501,750300982502,750301158201,750301170701,
		750400055868,786108110006,786108110027,786108110028,
		786108110029,786108110153,871737145210]
		#Keeponlybananaandpineapple
		df=df.loc[df['upc'].isin(val_list)]

	elif code == '1985197040_2':
		val_list=[1057916016, 1195165011, 1540019424, 1540019433,
		1752451310, 1752451312, 1752451315, 1752451325,
		1752451337, 1752451516, 1752452116, 1752470001,
		1855400005, 1889490044, 1889490045, 1889490056,
		1889490057, 2400003034, 2400004447, 2400030348,
		2400039332, 2400050788, 2400057744, 2500002657,
		2873301616, 2873350019, 3003430029, 3003430047,
		3003430329, 3003430339, 3022308050, 3214300708,
		3380310103, 3597118010, 3597118108, 3597139991,
		3680030776, 3680030777, 3823219078, 3823232037,
		3823232328, 3823234251, 3823236450, 3823237612,
		3823280900, 3825978059, 3825978085, 3963996062,
		3963996095, 3977955261, 4113059518, 4113059519,
		4116300644, 4116340644, 4116396000, 4116397657,
		4119004278, 4122018913, 4122065659, 4124020028,
		4126815116, 4126815125, 4126815143, 4126815316,
		4126815317, 4126815318, 4126815326, 4126815327,
		4126815618, 4126815621, 4126816400, 4126819017,
		4128292823, 4149702330, 4149707239, 4149707242,
		4279780118, 4279796144, 4279796154, 4500906738,
		4500906744, 4500906795, 4500906945, 4500907068,
		4500911560, 4656771696, 5349507007, 5349507045,
		5349507090, 5349509078, 5349509203, 6024301130,
		6024301141, 7078403350, 7078403377, 7122816109,
		7122816207, 7122816209, 7122816216, 7122816222,
		7127992205, 7143000984, 7143000988, 7196296787,
		7203688052, 7203688059, 7243128000, 7243128001,
		7243165311, 7243166006, 7243166014, 7243166023,
		7243166027, 7464100146, 7464100254, 7464100285,
		7464100304, 7464100509, 7464100511, 7464100606,
		7464101146, 7464101186, 7464101304, 7464101511,
		7464101613, 7464102001, 7464103277, 7464103285,
		7464110801, 7490406003, 7490420007, 7490420023,
		7490420032, 7490420037, 7490420057, 7490420137,
		7545000152, 7545000154, 7545050014, 7545050078,
		7663751197, 7663751511, 7663751645, 7663751719,
		7663752218, 7663753093, 7774521776, 7774521898,
		7774521965, 7774522354, 7774522399, 7774522944,
		7774523255, 7774523329, 7774523471, 7774523472,
		7774523542, 7774523756, 7774523757, 7789023095,
		7789026001, 7789029025, 7789051281, 7789095645,
		7789095648, 7789095651, 7945384533, 8185183311,
		8185183318, 8869478144, 8869478155, 8956305391,
		8956306131, 8956306136, 9005420050, 9250474051,
		9282505888, 9282571445, 9316311012, 9316336557,
		9316336559, 9530966101, 9563103275, 9563103277,
		9799208501, 9848720330, 9848720338, 60117210539,
		60117210547, 60117210646, 60117220547, 60117220653,
		60117230547, 60260204662, 60260204663, 60260204673,
		60504925975, 60504928195, 60504933636, 61001407657,
		61001409436, 61057903516, 61619910009, 61619910029,
		61619912009, 61619914009, 61619914029, 61619916019,
		61619918006, 61619920006, 61786217110, 63891410141,
		63891410142, 64034401036, 64034401437, 64034401439,
		64034401441, 64034401443, 64312607184, 64779300155,
		64779300157, 64779300161, 64796006005, 64796006016,
		68692411805, 68692411823, 68692442914, 68692472889,
		68692472906, 68692475008, 68692482000, 68692482995,
		70176165196, 70176165200, 70176166190, 70176166195,
		70176166200, 70176167200, 70882057702, 71685480654,
		71685480659, 71685480750, 71685480774, 71685480872,
		71752420013, 71752420019, 71752420021, 71752420025,
		71752420115, 71752451112, 71752451212, 71752451301,
		71752451303, 71752451305, 71752451310, 71752451312,
		71752451313, 71752451314, 71752451315, 71752451316,
		71752451317, 71752451318, 71752451323, 71752451324,
		71752451325, 71752451326, 71752451332, 71752451333,
		71752451334, 71752451335, 71752451337, 71752451340,
		71752451343, 71752451357, 71752451358, 71752451362,
		71752451363, 71752451365, 71752451366, 71752451370,
		71752451374, 71752451378, 71752451382, 71752451389,
		71752451390, 71752451510, 71752451518, 71752451520,
		71752452112, 71752452116, 71752452212, 71752470001,
		71752471976, 71752477791, 71752480409, 71812225028,
		71812225078, 71812906522, 71812906523, 71965891008,
		72251570111, 72251570152, 72619100405, 73380310103,
		73382777012, 75480778010, 75887010098, 75887022002,
		75887031510, 75887032748, 75887032779, 75887032912,
		75887032955, 76235707716, 78279600032, 78279600139,
		78279600706, 78279600730, 79934104430, 81005101008,
		81305501016, 82655322009, 82676621700, 82676621702,
		82676621703, 82676621706, 82676621708, 82676621712,
		82676621713, 82676621715, 82676621720, 82676621729,
		82676621730, 82676621732, 82676626009, 82676626036,
		83214300708, 85123100145, 85123100165, 85123100175,
		88194500001, 88194500060, 88194500100, 88194581008,
		88194581009, 88194581010, 88194581011, 88194588102,
		89049300405, 89205600141]
		# Keep only banana and pineapple
		df=df.loc[df['upc'].isin(val_list)]

	return df

