import pandas as pd
import numpy as np

def clean_data(code, df):
	if code == '2600981020_1':
		# Large sizes of liquor should be in ML, not OZ
		df.loc[(df.multi * df.size1_amount == 1986) & (df.size1_units == 'OZ'), 'size1_units'] = 'ML'
		df.loc[(df.multi * df.size1_amount == 2130) & (df.size1_units == 'OZ'), 'size1_units'] = 'ML'

	elif code == '1973045020_1':
		# These are small Pez dispensers
		df.loc[(df.multi * df.size1_amount == 87) & (df.size1_units == 'OZ'), 'size1_amount'] = .87


	elif code == '2614332020_1':
		# These should be counts of cigarettes
		df.loc[(df.multi * df.size1_amount == 200) & (df.size1_units == 'OZ'), 'size1_units'] = 'CT'

	elif code == '2736521020_1':
		# These are pickle-in-a-pouch-type things (not comparable to 1 jar)
		df.loc[df.size1_units == 'CT', 'size1_amount'] = df.size1_amount[df.size1_units == 'CT'] * 3.75
		df.loc[df.size1_units == 'CT', 'size1_units'] = 'OZ'

	elif (code == '2735179020_11' or code == '3035705020_12'):
		# This is a typo on eyeliner
		df.loc[(df.multi * df.size1_amount == 39) & (df.size1_units == 'OZ'), 'size1_amount'] = 0.039

	elif code == '2735179020_20':
		# These are typos in sizes and units of hair accesories
		df.loc[(df.multi * df.size1_amount == 4.6) & (df.size1_units == 'OZ'), 'size1_amount'] = 4
		df.loc[(df.multi * df.size1_amount == 0.005) & (df.size1_units == 'OZ'), 'size1_amount'] = 5
		df.loc[df.size1_units == 'OZ', 'size1_units'] = 'CT'

	elif code == '3035705020_5':
		# These are small data isses on eye shadows
		df.loc[(df.multi * df.size1_amount == 32) & (df.size1_units == 'OZ'), 'size1_amount'] = 0.32

	elif code == '3035705020_7':
		# These are small data isses on lip remedies
		df.loc[(df.size1_amount == 15) & (df.multi == 1 )& (df.size1_units == 'OZ'), 'size1_amount'] = 0.15
		df.loc[(df.size1_amount == 25) & (df.multi == 1 )& (df.size1_units == 'OZ'), 'size1_amount'] = 0.25
		df.loc[(df.size1_amount == 35) & (df.multi == 1 )& (df.size1_units == 'OZ'), 'size1_amount'] = 0.35
		df.loc[(df.size1_amount == 150) & (df.multi == 1 )& (df.size1_units == 'OZ'), 'size1_amount'] = 0.15

	elif code == '3035705020_8':
		# These are data issues on lipsticks
		df.loc[(df.size1_amount > 100) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/100
		df.loc[(df.size1_amount > 1) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/10

	elif code == '3035705020_10':
		# These are data issues on blushers
		df.loc[(df.size1_amount > 1.99) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/10

	elif code == '3035705020_13':
		# These are data issues on concealers
		df.loc[(df.size1_amount > 10) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/100
		df.loc[(df.size1_amount > 6) & (df.multi == 1) & (df.size1_units == 'OZ'), 'size1_amount'] = df['size1_amount']/10

	elif code == '2820516020_1':
		# These should be counts of cigarettes
		df.loc[(df.multi * df.size1_amount == 2500) & (df.size1_units == 'CT'), 'size1_units'] = 'ML'

	elif code == '2972389020_26':
		# These are lip balm (should be 0.15 OZ instead of 150 OZ)
		df.loc[(df.multi * df.size1_amount == 150) & (df.size1_units == 'OZ'), 'size1_amount'] = .15

	elif code == '2972389020_8':
		# These cosmetics-eyebrown (should be 0.04 OZ instead of 39 OZ, Fabubrow Pencil Medium Brown)
		df.loc[(df.multi * df.size1_amount == 39) & (df.size1_units == 'OZ'), 'size1_amount'] = .04

	elif code == '1965711020_1':
		val_list=[1291404450,3126200788,3126200858,3500068625,3500068626,3700001796,
		6905581168,6905581262,6905581513,6905581584,
		6905581676,6905581795,6905582156,6905582425,
		6905582442,6905582452,6905582453,6905582666,
		6905582959,6905583074,6905583075,6905583076,
		6905583092,6905583311,6905583312,6905585803,
		6905585816,6905585822,31031032363,65356915893,
		65356915894,65356915896,65356915897,65356915898,
		65356916008,65356916010,65356916011,65356916012,
		65356917473,65356918678,65356918682,65356918684,
		65356920609,65356922139,65356924128,65356924498,
		65356925209,65356925210,65356925211,65356925529,
		65356926594,65356926618,65356928395,65356928397,
		65356928398,65356928399,65356928400,65356928401,
		65356928402,65356928403,65356928404,65356928429,
		65356928606,65356928649,65356929439,65356929440,
		65356929441,65356929463,65356929500,65356930357,
		65356930359,65356930360,65356930361,65356930362, 
		65356930363,65356930366,65356930367,65356930370,
		65356930371,65356931127,65356931863,65356931865,
		65356931866,65356931961,65356932086,65356932755,
		65356932756,65356932757,65356935974,65356936609,
		65356936610,65356936611,65356936612,65356938394,
		65356938398,65356938400,65356938401,65356938402,
		65356938831,65356938832,65356938833,65356938834,
		65356938835,65356938836,67293510978,75207700434,
		75207700440,75207700455,75207700489,76687800029,
		76687800033,76687800035,76687800039,76687800059,
		76687800060,76687800106,76687800125,76687800126,
		76687800135,76687800149,76687800247,76687800265,
		76687800270,76687800275,76687800286,76687800365,
		76687810001,76687820011,76687820012,76687820013,
		76687820014,76687820015,76687820023,76687830001]
		# Keep only kids segment in 'ORAL HYGIENE APPLIANCE AND ACCESSORY' module
		df=df.loc[df['upc'].isin(val_list)]
	

	elif code == '1965711020_2':
		val_list=[36006500,36006600,1111035335,1111079743,1111383159,1111383359,1182202493,
		1182237253,1233300277,1291404550,1330844471,1500076083,1512701543,2316704073,
		3003405014,3003460336,3126200870,3225109887,3457567784,3500055342,3500055355,
		3500055359,3500055401,3500055402,3500055533,3500055853,3500055856,3500055857,
		3500055858,3500055859,3500055875,3500056000,3500056001,3500056005,3500056010,
		3500056011,3500056013,3500056015,3500056016,3500056201,3500056204,3500056205,
		3500056206,3500056213,3500056214,3500056216,3500056218,3500058401,3500058402,
		3500068692,3500068699,3520300075,3582605937,3680005107,3680015688,3680060062,
		3700000285,3700000290,3700000373,3901513000,4113033118,4113048268,4113050521,
		4119021369,4122019495,4124013653,4125096082,4126814003,4126815797,4131014233,
		4152031101,4152087462,4152087980,4173508426,4567465455,4656791142,4741400501,
		4902222080,4902234479,4902237886,4902239459,4902244264,4902244265,4934708007,
		4934708008,4970578894,4970578962,4970578982,5042812450,5218110442,5218132313,
		5218149924,5221300008,5221300009,5310000126,5310000129,5310000131,5310000132,
		5310000133,5310000135,5310000139,5310000261,5310012071,5310020131,5800000025,
		5800000504,6010712107,6010783324,6010790361,6905580681,6905580922,6905581241,
		6905581585,6905581904,6905582147,6905582148,6905582415,6905582416,6905582417,
		6905582418,6905582419,6905582420,6905582449,6905582450,6905582608,6905582673,
		6905582780,6905583302,6905583727,6905583805,6905584135,6905584143,6905584201,
		6905584940,6905584948,6905584955,6905584956,6905585228,6905585231,6905585489,
		6905585847,6905586057,6905586058,7003860631,7094200114,7094200216,7094200217,
		7094212153,7094212163,7094212303,7094212304,7094212459,7094212519,7094240218,
		7103119120,7103119951,7103131000,7103161140,7150308121,7200017458,7421309317,
		7421309318,7421309319,7421309321,7421309322,7421309323,7545024991,7582866907,
		7675700008,7789090533,8040000022,8040000027,8040000037,8040000063,8040000091,
		8040000098,8040000099,8040000265,8040000541,8040000608,8040001368,8126711257,
		8126711326,8126712002,8126712149,8126792520,8457911758,8480599233,8517800108,
		8517800109,8517811001,8770190485,8997640673,9460600129,9460600365,9460602129,
		9629511332,30041081200,30041081465,30041662122,30041663214,30041663217,
		30041663220,30041663223,30041663457,30041663590,30041664289,30041664290,
		30041664778,30041665028,30041667263,30041667813,30041667814,30041667815,
		30041667816,31031032361,31031032362,37675700008,38137007098,38137007792,
		38137007894,38137009198,38137009528,38137009644,38137009788,38137009789,
		38137009790,38137009869,61429939724,63174002010,63873031755,63927741841,
		63927770948,63927776149,65108022155,65108072706,67293510256,67293510257,
		67293510861,67293510866,67293510876,67293510966,67293568006,67293571001,
		67293571020,67293576966,67293577966,67293578104,67293578117,67293578132,
		67293578134,67293581001,67293583005,67293583051,67293583055,68560334255,
		68616911609,71578902170,71785120044,71928329024,71928359350,71928374142,
		71928396679,72100314283,72100314310,72100314385,72100314443,72543993507,
		72543996262,72919301540,72919301546,73101505369,73101507826,73101509639,
		76023635359,76687800011,76687800012,78070700399,78891435408,79813632003,
		83152700356,83152700411,84078708528,84098601258,84529607581,84529607642,
		84533100243,84603600098,85733100035,85737100031,87129000262,87219758464,
		87219758473,88439249008,88439255273,89842300023,89842300039,89842300047,
		89842300053,89842300055,89842300067,89842300071,750107263702]
		# Keep only kids segment in 'ORAL HYGIENE BRUSHES' module
		df=df.loc[df['upc'].isin(val_list)]
	


	elif code == '1965711020_3':
		val_list=[36000007,36000008,37000003,1111035860,
		1111035861,1111035862,1111035863,1111302280,
		1111315120,1111318660,1111319120,1111320202,
		1111320400,1111322060,1111322410,1111322420,
		1111322430,1111329780,1111341101,1121389316,
		1182236055,1182293413,1182293414,1182293415,
		2090800976,2260000010,2727520002,2727520003,
		2727520004,2836783155,2836783156,2836783425,
		2836783426,2836783427,2836783593,2836783624,
		2836783625,3320015120,3320019120,3320020202,
		3320020230,3320020240,3320020260,3320020270,
		3320020615,3320020620,3320020630,3320020635,
		3320020636,3320022060,3320022240,3320022305,
		3320022310,3320022325,3320022340,3320022345,
		3320022350,3320022355,3320022360,3320022375,
		3320022380,3320022410,3320022430,3320022460,
		3320022465,3320022470,3320025381,3320025390,
		3320026105,3320029780,3320041101,3320074374,
		3320090900,3457516986,3457516988,3500052100,
		3500052101,3500052102,3500052509,3500052532,
		3500052541,3500052543,3500052545,3500052546,
		3500052549,3500052550,3500052551,3500056100,
		3500074317,3500078236,3600073560,3623906102,
		3700000020,3700000275,3700000338,3700000349,
		3700000374,3700000381,3700000382,3700000399,
		3700004987,3700004988,3700006376,3700013909,
		3700013911,3700019720,3700024247,3700029026,
		3700029483,3700031498,3700045307,3700045308,
		3700045309,3700048869,4016810006,4116340623,
		4116340624,4125003209,4125003211,4126033051,
		4126033052,4126034975,4141500072,4141503472,
		4161100008,4175300007,4815590819,4858200204,
		4858200420,4858200425,4933643150,4933643400,
		4933643650,4933643700,4933643750,4933643900,
		4933644800,4933646300,4933647300,4933675900,
		4933676900,5042808088,5052520000,5310000299,
		5310000303,5310000305,5310000309,5310000310,
		5310000315,5310000317,5310000321,6565690928,
		6830563229,6830563230,6830563233,6830563235,
		7094201720,7094230267,7094277898,7545025057,
		7559573102,7559573103,7559573105,7666000884,
		7732610104,7732610106,7732610204,7732610206,
		7732610306,7732610806,7732611001,7732611006,
		7732611440,7732611506,7732612104,7732612106,
		7732612204,7732612904,7732613247,7732613248,
		7732613677,7732613806,7732613840,7732614006,
		7732614104,7732615406,7732615440,7732615506,
		7732615901,7732615904,7732615906,7732615940,
		7732616206,7732616506,7732616540,7732616906,
		7732617006,7732617040,7732617306,7732619301,
		7732619306,7732619340,7732619701,7732619704,
		7732619740,7732691046,7732691101,7732691146,
		7732691246,7732691346,7732691446,7732691546,
		7761000001,7761000003,7761000004,7761000005,
		7834700152,7834700153,7834700154,7834700155,
		7834703025,7834703034,7834703035,7834703036,
		7834703038,7834703039,7834703065,7852200150,
		7852200152,7852200728,7852200729,7852201500,
		7852201510,7852201515,7852201520,7852201531,
		7852201535,7852201545,7852201551,7852261847,
		7852261894,8085200157,8085200168,8300001640,
		9550816371,9550816373,9550819802,9746706720,
		9746706725,18543100017,18722400048,30041663663,
		30041664872,30041665006,30041665007,30041665029,
		30041665264,30041665499,30041665500,30041666841,
		30041667540,30041667740,30696938474,31015886075,
		31015888500,31015888600,31031032250,31031032294,
		31031032299,31031032300,31031032301,31031032302,
		31031032331,31031032406,31031032407,31031032460,
		31031032463,31031032482,31031033972,31031033973,
		31191706259,33436200004,61332500001,61332500002,
		61332500030,63779250003,63779250005,63919401062,
		63919401063,63919402271,64769210701,64769213501,
		66618300046,67293510329,67293510369,67293510370,
		67293510373,67293510440,67293510444,69702912612,
		69956231036,70059600050,71413200056,71413200063,
		71833422001,71833422052,71833422053,71833422055,
		71833422081,71833422083,71833422084,71833430087,
		71833430088,71833430089,73295305040,73373908090,
		73373908091,73373908092,74147277211,74466500218,
		74973210021,75207700437,75907285000,78973810040,
		79285000235,79285000237,79285000264,79285007299,
		79285007399,79285072699,81445701018,81445701019,
		85013200200,85013200202,87092900902,87831400257,
		87901000027,89189100001,89340700023,89611400000,
		400163809063,400163809085,400163809086,400163809801,
		400163809802,400163809804,400163809808,400163809809,
		401764500827,629106920630,629106920640,844586000067]
		# Keep only kids segment in 'TOOTH CLEANERS' module
		df=df.loc[df['upc'].isin(val_list)]
	return df



















