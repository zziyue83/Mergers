
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   14.2   Copyright 1985-2015 StataCorp LP
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

25-user 4-core Stata network perpetual license:
       Serial number:  501406210780
         Licensed to:  NUIT ART - Research Computing
                       Anton Verlygo (anton@northwestern.edu)

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do /projects/b1048/gillanes/Mergers/Codes/Mergers/Sandbox/DiD_interactions2.d
> o ../../../All/m_1924129020_30/intermediate ../output/ month 2008 8 2007 11 

. 
. clear all

. 
. set more off

. 
. est clear

. 
. /* *args coming from the python script*/
. /* *args: input_path       = `1' */
. /* *args: output_path      = `2' */
. /* *args: month_or_quarter = `3' */
. /* *args: year_completed   = `4' */
. /* *args: month_completed  = `5' */
. /* *args: year_announced   = `6' */
. /* *args: month_announced  = `7' */
. 
. 
. cd `1'
/projects/b1048/gillanes/Mergers/All/m_1924129020_30/intermediate

. log using `2'/did_stata_int_`3', text replace
(note: file /projects/b1048/gillanes/Mergers/All/m_1924129020_30/intermediate/.
> ./output//did_stata_int_month.log not found)
-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /projects/b1048/gillanes/Mergers/All/m_1924129020_30/intermediate/
> ../output//did_stata_int_month.log
  log type:  text
 opened on:   4 Mar 2021, 21:33:43

. 
checking ftools consistency and verifying not already installed...
. import delimited "stata_did_int_`3'.csv", encoding(ISO-8859-1)
all files already exist and are up to date.

. 
. /* Fixed Effects */
checking ftools consistency and verifying not already installed...
. egen entity_effects = group(upc dma_code)

. egen time_effects = group(year `3')

. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

all files already exist and are up to date.

. ssc install ftools
. egen weights_1 = total(pre_vol), by(upc)

. egen weights_2 = total(pre_vol), by(dma_code)

checking ftools consistency and verifying not already installed...
. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(51,441 real changes made)

. replace weights_2 = round(weights_2)
(51,432 real changes made)

. replace weights_3 = round(weights_3)
(50,398 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(51,441 missing values generated)

. replace Merging = 1 if merging == "True"
(16,890 real changes made)

. replace Merging = 0 if merging == "False"
(34,551 real changes made)

. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
. replace demand_instruments0 = demand_instruments0/distance
(51,441 real changes made, 14 to missing)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. gen month_date = ym(year, month)

. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------

. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(11,496 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------

. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. gen between = 0

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(9,011 real changes made)

. gen Merging_btw = Merging * between

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(34,551 missing values generated)

. bys dma_code: egen mp_share = max(mp_share)
(268 missing values generated)

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
  6. }
(51,441 real changes made)
(51,441 real changes made)
(51,441 real changes made)

. 
. /*Minor post*/
. gen Major = .
(51,441 missing values generated)

. replace Major = 1 if major_competitor == "True"
(16,732 real changes made)

. replace Major = 0 if major_competitor == "False"
(34,709 real changes made)

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. gen HHI_bins = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(0 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(51,432 real changes made)

. 
. /*Coarse DHHI Bins*/
all files already exist and are up to date.

. 
. /* Fixed Effects */
. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(3,489 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(17,548 real changes made)

. 
. /*Finer HHI Bins*/
. gen HHI_binsf = 0

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(0 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(0 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(0 real changes made)

. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(0 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(0 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(51,432 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(2,476 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(1,332 real changes made)

. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(1,913 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(574 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(1,390 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(654 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(871 real changes made)

. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(17,548 real changes made)

. 
. /*HHI and DHHI Bins*/
. gen DHHI_HHI = 0

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(26,767 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(24,291 real changes made)

. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(22,959 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(21,046 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(20,472 real changes made)

. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(19,082 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(18,428 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(17,548 real changes made)

. 
. /*Nocke & Whinston Bins*/
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(21,046 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(17,548 real changes made)

. 
. /*Months After and Pre Dummies*/
. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
. egen entity_effects = group(upc dma_code)

  3. }
(21,337 real changes made)
(20,450 real changes made)
(19,564 real changes made)
(18,665 real changes made)
(17,812 real changes made)
(16,916 real changes made)
(16,020 real changes made)
(15,121 real changes made)
(14,220 real changes made)
(13,315 real changes made)
(12,419 real changes made)
(11,496 real changes made)
(10,571 real changes made)
(9,651 real changes made)
(8,727 real changes made)
(7,840 real changes made)
(6,968 real changes made)
(6,094 real changes made)
(5,212 real changes made)
(4,341 real changes made)
(3,473 real changes made)
(2,601 real changes made)
(1,735 real changes made)
(862 real changes made)

. 
. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
  3. }
(29,220 real changes made)
(28,343 real changes made)
(27,458 real changes made)
(26,555 real changes made)
(25,658 real changes made)
(24,748 real changes made)
(23,840 real changes made)
(22,923 real changes made)
(22,007 real changes made)
(21,093 real changes made)
(20,177 real changes made)
(19,237 real changes made)
(18,313 real changes made)
(17,389 real changes made)
(16,436 real changes made)
(15,491 real changes made)
(14,547 real changes made)
(13,630 real changes made)
. egen time_effects = group(year `3')

(12,703 real changes made)
(11,775 real changes made)
(10,875 real changes made)
(9,970 real changes made)
(9,038 real changes made)
(8,082 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

. egen weights_1 = total(pre_vol), by(upc)

. egen weights_2 = total(pre_vol), by(dma_code)

. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(91,080 real changes made)

117. }
. replace weights_2 = round(weights_2)
(92,223 real changes made)

. replace weights_3 = round(weights_3)
(89,403 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(92,236 missing values generated)

. replace Merging = 1 if merging == "True"
(45,860 real changes made)

. replace Merging = 0 if merging == "False"
(46,376 real changes made)

. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
. replace demand_instruments0 = demand_instruments0/distance
(2,720 real changes made)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. gen month_date = ym(year, month)

. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------

. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(20,410 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------

. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. gen between = 0

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(15,881 real changes made)

. gen Merging_btw = Merging * between

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(46,376 missing values generated)

. bys dma_code: egen mp_share = max(mp_share)
(41 missing values generated)

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
  6. }
(92,236 real changes made)
(92,236 real changes made)
(92,236 real changes made)

. 
. /*Minor post*/
. gen Major = .
(92,236 missing values generated)

. replace Major = 1 if major_competitor == "True"
(26,393 real changes made)

. replace Major = 0 if major_competitor == "False"
(65,843 real changes made)

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. gen HHI_bins = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(0 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(92,223 real changes made)

. 
. /*Coarse DHHI Bins*/
. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(3,669 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(68,334 real changes made)

. 
. /*Finer HHI Bins*/
. gen HHI_binsf = 0

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(0 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(0 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(0 real changes made)

. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(0 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(0 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(92,223 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(3,039 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(3,053 real changes made)

. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(577 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(0 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(502 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(737 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(2,430 real changes made)

. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(68,334 real changes made)

. 
. /*HHI and DHHI Bins*/
. gen DHHI_HHI = 0

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(78,685 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(75,646 real changes made)

. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(72,593 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(72,016 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(72,016 real changes made)

. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(71,514 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(70,777 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(68,334 real changes made)

. 
. /*Nocke & Whinston Bins*/
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(72,016 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(68,334 real changes made)

. 
. /*Months After and Pre Dummies*/
. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
all files already exist and are up to date.

. ssc install reghdfe
all files already exist and are up to date.

. ssc install reghdfe
  3. }
(37,903 real changes made)
(36,327 real changes made)
(34,717 real changes made)
(33,111 real changes made)
(31,571 real changes made)
(29,992 real changes made)
(28,438 real changes made)
(26,874 real changes made)
(25,293 real changes made)
(23,668 real changes made)
(22,050 real changes made)
(20,410 real changes made)
(18,754 real changes made)
(17,115 real changes made)
(15,493 real changes made)
(13,933 real changes made)
(12,379 real changes made)
(10,823 real changes made)
(9,278 real changes made)
(7,744 real changes made)
(6,223 real changes made)
(4,681 real changes made)
(3,124 real changes made)
(1,552 real changes made)

. 
. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
checking reghdfe consistency and verifying not already installed...
  3. }
(52,728 real changes made)
(51,125 real changes made)
(49,537 real changes made)
(47,948 real changes made)
(46,387 real changes made)
(44,789 real changes made)
(43,217 real changes made)
(41,637 real changes made)
(40,043 real changes made)
(38,452 real changes made)
(36,799 real changes made)
(35,111 real changes made)
(33,410 real changes made)
(31,716 real changes made)
(29,995 real changes made)
(28,310 real changes made)
(26,591 real changes made)
(24,839 real changes made)
checking reghdfe consistency and verifying not already installed...
(23,112 real changes made)
(21,370 real changes made)
(19,640 real changes made)
(17,919 real changes made)
(16,160 real changes made)
(14,333 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
all files already exist and are up to date.

. ssc install reghdfe
checking reghdfe consistency and verifying not already installed...
117. }
all files already exist and are up to date.

. ssc install estout
all files already exist and are up to date.

. ssc install estout
checking estout consistency and verifying not already installed...
checking estout consistency and verifying not already installed...
all files already exist and are up to date.

. ssc install estout
checking estout consistency and verifying not already installed...
all files already exist and are up to date.

. 
. /* Fixed Effects */
all files already exist and are up to date.

. 
. /* Fixed Effects */
. egen entity_effects = group(upc dma_code)

all files already exist and are up to date.

. 
. /* Fixed Effects */
. egen entity_effects = group(upc dma_code)

(32 vars, 493,686 obs)

. 
. /*Install Packages*/
. ssc install outreg2
. egen time_effects = group(year `3')

. egen time_effects = group(year `3')

checking outreg2 consistency and verifying not already installed...
. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

. egen entity_effects = group(upc dma_code)

. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

. egen weights_1 = total(pre_vol), by(upc)

all files already exist and are up to date.

. ssc install ftools
checking ftools consistency and verifying not already installed...
. egen time_effects = group(year `3')

. egen weights_2 = total(pre_vol), by(dma_code)

. egen weights_1 = total(pre_vol), by(upc)

. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(182,488 real changes made)

. replace weights_2 = round(weights_2)
(182,488 real changes made)

. replace weights_3 = round(weights_3)
(176,420 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(182,488 missing values generated)

. replace Merging = 1 if merging == "True"
(38,665 real changes made)

. replace Merging = 0 if merging == "False"
(143,823 real changes made)

. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
. replace demand_instruments0 = demand_instruments0/distance
(4,296 real changes made, 2 to missing)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. gen month_date = ym(year, month)

. egen weights_2 = total(pre_vol), by(dma_code)

. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------

. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(40,101 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------

. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. gen between = 0

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(34,242 real changes made)

. gen Merging_btw = Merging * between

(30 vars, 238,458 obs)

. 
. /*Install Packages*/
. ssc install outreg2
. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
. egen weights_1 = total(pre_vol), by(upc)

. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(143,823 missing values generated)

checking outreg2 consistency and verifying not already installed...
. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(233,256 real changes made)

. replace weights_2 = round(weights_2)
(239,380 real changes made)

. replace weights_3 = round(weights_3)
(221,999 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(239,397 missing values generated)

. replace Merging = 1 if merging == "True"
(92,069 real changes made)

. replace Merging = 0 if merging == "False"
(147,328 real changes made)

. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
. replace demand_instruments0 = demand_instruments0/distance
(7,573 real changes made)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. gen month_date = ym(year, month)

. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------

. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(55,102 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------

. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. gen between = 0

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(42,355 real changes made)

. gen Merging_btw = Merging * between

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
all files already exist and are up to date.

. ssc install ftools
. bys dma_code: egen mp_share = max(mp_share)

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(147,328 missing values generated)

. egen weights_2 = total(pre_vol), by(dma_code)

checking ftools consistency and verifying not already installed...
  6. }
(182,488 real changes made)
(181,128 real changes made)
(180,448 real changes made)

. 
. /*Minor post*/
. gen Major = .
(182,488 missing values generated)

. replace Major = 1 if major_competitor == "True"
(71,312 real changes made)

. replace Major = 0 if major_competitor == "False"
(111,176 real changes made)

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. gen HHI_bins = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(15,904 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(165,706 real changes made)

. 
. /*Coarse DHHI Bins*/
. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(2,126 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(0 real changes made)

. 
. /*Finer HHI Bins*/
. gen HHI_binsf = 0

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(878 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(0 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(651 real changes made)

. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(6,826 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(8,427 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(165,706 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(0 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(0 real changes made)

. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(0 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(0 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(0 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(0 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(2,126 real changes made)

. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(0 real changes made)

. 
. /*HHI and DHHI Bins*/
. gen DHHI_HHI = 0

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(2,126 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(2,126 real changes made)

. bys dma_code: egen mp_share = max(mp_share)
(542 missing values generated)
. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(2,126 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(2,126 real changes made)

all files already exist and are up to date.

. ssc install reghdfe
. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(2,126 real changes made)

. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(2,126 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(2,126 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(0 real changes made)

. 
. /*Nocke & Whinston Bins*/

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(2,126 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(0 real changes made)

. 
. /*Months After and Pre Dummies*/
. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
checking reghdfe consistency and verifying not already installed...
  6. }
(239,397 real changes made)
(239,397 real changes made)
(239,397 real changes made)

. 
. /*Minor post*/
. gen Major = .
(239,397 missing values generated)

. replace Major = 1 if major_competitor == "True"
(32,084 real changes made)

. replace Major = 0 if major_competitor == "False"
(207,313 real changes made)

. egen weights_3 = total(pre_vol), by(upc dma_code)

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. replace weights_1 = round(weights_1)
(259,681 real changes made)

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. replace weights_2 = round(weights_2)
(261,838 real changes made)

. gen HHI_bins = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(36,035 real changes made)

. replace weights_3 = round(weights_3)
(248,256 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(261,838 missing values generated)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(203,345 real changes made)

. 
. /*Coarse DHHI Bins*/
. replace Merging = 1 if merging == "True"
(86,070 real changes made)

. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(15,243 real changes made)

. replace Merging = 0 if merging == "False"
(175,768 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(156,706 real changes made)

. 
. /*Finer HHI Bins*/
. gen Non_Merging = (1 - Merging)

. gen HHI_binsf = 0

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
  3. }
(77,060 real changes made)
(73,768 real changes made)
(70,442 real changes made)
(67,077 real changes made)
(63,797 real changes made)
(60,331 real changes made)
(56,899 real changes made)
(53,479 real changes made)
(50,022 real changes made)
(46,632 real changes made)
(43,384 real changes made)
(40,101 real changes made)
(36,809 real changes made)
(33,560 real changes made)
(30,294 real changes made)
(27,065 real changes made)
(23,908 real changes made)
(20,752 real changes made)
. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace demand_instruments0 = demand_instruments0/distance
(7,019 real changes made, 5 to missing)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(0 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(0 real changes made)

. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
(17,654 real changes made)
(14,615 real changes made)
(11,640 real changes made)
(8,644 real changes made)
(5,726 real changes made)
(2,824 real changes made)

. 
. gen month_date = ym(year, month)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(7,745 real changes made)

. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(11,596 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(16,694 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(203,345 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(14,562 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(7,705 real changes made)

. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------
. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(6,303 real changes made)


. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(6,471 real changes made)

. replace after = 1 if month_date >= `cutoff_c' + 12
(61,995 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(3,744 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(1,738 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(3,290 real changes made)

. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(156,706 real changes made)

. 
. /*HHI and DHHI Bins*/
  3. }
(102,018 real changes made)
(98,553 real changes made)
(95,129 real changes made)
(91,652 real changes made)
(88,196 real changes made)
(84,657 real changes made)
(81,198 real changes made)
(77,841 real changes made)
(74,510 real changes made)
(71,186 real changes made)
(67,870 real changes made)
(64,520 real changes made)
(61,231 real changes made)
(58,000 real changes made)
(54,674 real changes made)
(51,410 real changes made)
(48,080 real changes made)
(44,743 real changes made)
. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------
(41,393 real changes made)
(38,022 real changes made)
(34,799 real changes made)
(31,603 real changes made)
(28,401 real changes made)
(25,153 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
. gen DHHI_HHI = 0


. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(200,536 real changes made)

. gen between = 0

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(185,974 real changes made)

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(48,009 real changes made)

. gen Merging_btw = Merging * between

. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(178,269 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(171,966 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(165,495 real changes made)

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(155,991 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(144,045 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(130,083 real changes made)

. 
. /*Nocke & Whinston Bins*/
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(171,966 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(130,083 real changes made)

. 
. /*Months After and Pre Dummies*/
. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(175,768 missing values generated)

(32 vars, 599,039 obs)

. 
. /*Install Packages*/
. ssc install outreg2
  3. }
(99,901 real changes made)
(95,640 real changes made)
(91,358 real changes made)
(87,185 real changes made)
(83,226 real changes made)
(79,149 real changes made)
(75,159 real changes made)
(71,255 real changes made)
(67,333 real changes made)
(63,268 real changes made)
(59,242 real changes made)
(55,102 real changes made)
(50,727 real changes made)
(46,534 real changes made)
(42,394 real changes made)
(38,440 real changes made)
(34,525 real changes made)
(30,289 real changes made)
(26,125 real changes made)
(21,925 real changes made)
(17,665 real changes made)
(13,310 real changes made)
(8,932 real changes made)
(4,437 real changes made)

. 
. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
checking outreg2 consistency and verifying not already installed...
. bys dma_code: egen mp_share = max(mp_share)
(82 missing values generated)
  3. }
(135,107 real changes made)
(130,830 real changes made)
(126,591 real changes made)
(122,188 real changes made)
(118,020 real changes made)
(113,862 real changes made)
(109,766 real changes made)
(105,611 real changes made)
(101,373 real changes made)
(97,141 real changes made)
(92,699 real changes made)
(88,003 real changes made)
(83,244 real changes made)
(78,469 real changes made)
(73,575 real changes made)
(68,932 real changes made)
(64,420 real changes made)
(59,755 real changes made)
(55,147 real changes made)
(50,611 real changes made)
(46,219 real changes made)
(41,917 real changes made)
(37,729 real changes made)
(33,381 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
all files already exist and are up to date.

. ssc install estout
checking estout consistency and verifying not already installed...
  6. }
(261,838 real changes made)
(261,627 real changes made)
(261,299 real changes made)

. 
. /*Minor post*/
. gen Major = .
(261,838 missing values generated)

. replace Major = 1 if major_competitor == "True"
(57,283 real changes made)

. replace Major = 0 if major_competitor == "False"
(204,555 real changes made)

all files already exist and are up to date.

. ssc install reghdfe
all files already exist and are up to date.

. ssc install ftools
. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. gen HHI_bins = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(78,783 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(183,055 real changes made)

. 
. /*Coarse DHHI Bins*/
. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(11,719 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(85,903 real changes made)

. 
. /*Finer HHI Bins*/
. gen HHI_binsf = 0

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

checking reghdfe consistency and verifying not already installed...
. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

checking ftools consistency and verifying not already installed...
. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(0 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(2,155 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(7,565 real changes made)

. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(34,837 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(34,226 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(183,055 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(17,050 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(12,491 real changes made)

. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(4,127 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(2,409 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(2,759 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(5,153 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(1,398 real changes made)

. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(85,903 real changes made)

. 
. /*HHI and DHHI Bins*/
. gen DHHI_HHI = 0

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(131,290 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(114,240 real changes made)

. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(101,749 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(97,622 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(95,213 real changes made)

. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(92,454 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(84,157 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(74,810 real changes made)

. 
. /*Nocke & Whinston Bins*/
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(97,622 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(74,810 real changes made)

. 
. /*Months After and Pre Dummies*/
. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
all files already exist and are up to date.

. 
. /* Fixed Effects */
  3. }
(116,864 real changes made)
(111,673 real changes made)
(106,529 real changes made)
(101,441 real changes made)
(96,489 real changes made)
(91,464 real changes made)
(86,517 real changes made)
(81,590 real changes made)
(76,720 real changes made)
(71,737 real changes made)
(66,862 real changes made)
(61,995 real changes made)
(56,773 real changes made)
(51,844 real changes made)
(46,913 real changes made)
(42,140 real changes made)
(37,447 real changes made)
(32,707 real changes made)
(28,006 real changes made)
(23,350 real changes made)
(18,705 real changes made)
(14,031 real changes made)
(9,367 real changes made)
(4,674 real changes made)

. 
. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
117. }
  3. }
(139,677 real changes made)
(134,426 real changes made)
(129,206 real changes made)
(124,353 real changes made)
(119,810 real changes made)
(115,256 real changes made)
(110,713 real changes made)
(106,159 real changes made)
(101,574 real changes made)
(96,965 real changes made)
(92,336 real changes made)
(87,696 real changes made)
(83,087 real changes made)
(78,479 real changes made)
(73,778 real changes made)
(69,163 real changes made)
(64,659 real changes made)
(60,140 real changes made)
(55,597 real changes made)
(51,018 real changes made)
(46,583 real changes made)
(42,172 real changes made)
(37,843 real changes made)
(33,532 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
all files already exist and are up to date.

. ssc install estout
. egen entity_effects = group(upc dma_code)

checking estout consistency and verifying not already installed...
117. }
all files already exist and are up to date.

. ssc install reghdfe
. egen time_effects = group(year `3')

checking reghdfe consistency and verifying not already installed...
all files already exist and are up to date.

. 
. /* Fixed Effects */
. egen entity_effects = group(upc dma_code)

. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

. egen time_effects = group(year `3')

(30 vars, 617,613 obs)

. 
. /*Install Packages*/
. ssc install outreg2
. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
all files already exist and are up to date.

. ssc install estout
checking outreg2 consistency and verifying not already installed...
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

checking estout consistency and verifying not already installed...
. egen weights_1 = total(pre_vol), by(upc)

. egen weights_1 = total(pre_vol), by(upc)

all files already exist and are up to date.

. ssc install ftools
checking ftools consistency and verifying not already installed...
117. }
. egen weights_2 = total(pre_vol), by(dma_code)

all files already exist and are up to date.

. 
. /* Fixed Effects */
. egen weights_2 = total(pre_vol), by(dma_code)

. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(476,906 real changes made)

. replace weights_2 = round(weights_2)
(493,686 real changes made)

. replace weights_3 = round(weights_3)
(478,566 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(493,686 missing values generated)

. replace Merging = 1 if merging == "True"
(172,276 real changes made)

. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(226,862 real changes made)

. replace Merging = 0 if merging == "False"
(321,410 real changes made)

. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
. replace weights_2 = round(weights_2)
(238,418 real changes made)

. replace weights_3 = round(weights_3)
(221,987 real changes made)

. 
. /*Post Merger Non Merging*/
. replace demand_instruments0 = demand_instruments0/distance
(10,005 real changes made, 23 to missing)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. gen Merging = .
(238,458 missing values generated)

. replace Merging = 1 if merging == "True"
(47,064 real changes made)

. egen entity_effects = group(upc dma_code)

. replace Merging = 0 if merging == "False"
(191,394 real changes made)

. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
. gen month_date = ym(year, month)

. replace demand_instruments0 = demand_instruments0/distance
(7,008 real changes made, 1 to missing)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. gen month_date = ym(year, month)

. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------
. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------

. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]


. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(55,315 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(116,994 real changes made)

. gen Post_Merger_1y = post_merger * after

all files already exist and are up to date.

. ssc install reghdfe
. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------

. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. gen between = 0

. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------
. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(43,952 real changes made)

checking reghdfe consistency and verifying not already installed...
. gen Merging_btw = Merging * between


. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
. gen between = 0

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(89,944 real changes made)

. gen Merging_btw = Merging * between

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(191,394 missing values generated)

. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(321,410 missing values generated)

. egen time_effects = group(year `3')

. bys dma_code: egen mp_share = max(mp_share)
(148 missing values generated)
all files already exist and are up to date.

. ssc install estout
. bys dma_code: egen mp_share = max(mp_share)
(6448 missing values generated)

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
checking estout consistency and verifying not already installed...

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

  6. }
(222,154 real changes made)
(217,816 real changes made)
(216,235 real changes made)

. 
. /*Minor post*/
. gen Major = .
(238,458 missing values generated)

. gen weights_0 = 1 /*to add weights that won't change things*/

. replace Major = 1 if major_competitor == "True"
(38,888 real changes made)

. replace Major = 0 if major_competitor == "False"
(199,570 real changes made)

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. gen HHI_bins = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(38,785 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(197,473 real changes made)

. 
. /*Coarse DHHI Bins*/
  6. }
(493,686 real changes made)
(493,508 real changes made)
(493,306 real changes made)

. 
. /*Minor post*/
. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(4,634 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(1,950 real changes made)

. 
. /*Finer HHI Bins*/
. gen HHI_binsf = 0

. gen Major = .
(493,686 missing values generated)

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace Major = 1 if major_competitor == "True"
(126,975 real changes made)

. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(2,160 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(4,233 real changes made)

. replace Major = 0 if major_competitor == "False"
(366,711 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(12,540 real changes made)

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(15,859 real changes made)

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(6,153 real changes made)

. gen HHI_bins = 0

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(197,473 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(80,006 real changes made)

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(37,120 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(11,406 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(413,680 real changes made)

. 
. /*Coarse DHHI Bins*/
. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(4,278 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(3,106 real changes made)

. gen DHHI_bins = 0

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(0 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(1,528 real changes made)

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(27,128 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(0 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(64,546 real changes made)

. 
. /*Finer HHI Bins*/
. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(1,950 real changes made)

. 
. /*HHI and DHHI Bins*/
. gen DHHI_HHI = 0

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(59,428 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(22,308 real changes made)

all files already exist and are up to date.

. 
. /* Fixed Effects */
. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(10,902 real changes made)

. gen HHI_binsf = 0

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(6,624 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(3,518 real changes made)

. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(3,518 real changes made)

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(1,990 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(1,950 real changes made)

. 
. /*Nocke & Whinston Bins*/
. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(6,624 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(0 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(1,950 real changes made)

. 
. /*Months After and Pre Dummies*/
. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(0 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(0 real changes made)

. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(19,987 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(60,019 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(413,680 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(35,003 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(17,385 real changes made)

. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(7,504 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(14,912 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(7,081 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(2,336 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(2,799 real changes made)

  3. }
(101,588 real changes made)
(97,430 real changes made)
(93,268 real changes made)
(88,981 real changes made)
(84,717 real changes made)
(80,340 real changes made)
(76,138 real changes made)
(72,054 real changes made)
(67,944 real changes made)
(63,637 real changes made)
(59,483 real changes made)
(55,315 real changes made)
(51,133 real changes made)
(47,023 real changes made)
(42,878 real changes made)
(38,030 real changes made)
(33,141 real changes made)
(28,460 real changes made)
. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(64,546 real changes made)

. 
. /*HHI and DHHI Bins*/
(24,209 real changes made)
(20,079 real changes made)
(15,997 real changes made)
(11,908 real changes made)
(7,919 real changes made)
(3,891 real changes made)

. 
. gen DHHI_HHI = 0

. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
. egen weights_1 = total(pre_vol), by(upc)

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(151,566 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(116,563 real changes made)

. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(99,178 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(91,674 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(76,762 real changes made)

  3. }
(132,566 real changes made)
(128,256 real changes made)
(123,903 real changes made)
(119,439 real changes made)
(115,094 real changes made)
(110,641 real changes made)
(106,281 real changes made)
(101,852 real changes made)
(97,319 real changes made)
(92,918 real changes made)
(88,650 real changes made)
(84,412 real changes made)
(80,200 real changes made)
(75,922 real changes made)
(71,539 real changes made)
(67,284 real changes made)
(62,997 real changes made)
(58,591 real changes made)
. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(69,681 real changes made)

(54,207 real changes made)
(49,790 real changes made)
(45,501 real changes made)
(41,331 real changes made)
(37,249 real changes made)
(33,132 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(67,345 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(64,546 real changes made)

. 
. /*Nocke & Whinston Bins*/
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(91,674 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(64,546 real changes made)

. 
. /*Months After and Pre Dummies*/
. egen entity_effects = group(upc dma_code)

. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
  3. }
(215,740 real changes made)
(206,845 real changes made)
(197,855 real changes made)
(188,793 real changes made)
(179,859 real changes made)
(170,882 real changes made)
(161,946 real changes made)
(153,017 real changes made)
(144,072 real changes made)
(134,969 real changes made)
(126,000 real changes made)
(116,994 real changes made)
(107,885 real changes made)
(98,854 real changes made)
(89,707 real changes made)
(80,530 real changes made)
(71,444 real changes made)
(62,427 real changes made)
(53,485 real changes made)
(44,543 real changes made)
(35,616 real changes made)
(26,695 real changes made)
(17,845 real changes made)
(8,876 real changes made)

. 
. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
. egen time_effects = group(year `3')

. egen weights_2 = total(pre_vol), by(dma_code)

  3. }
(269,053 real changes made)
(260,249 real changes made)
(251,454 real changes made)
(242,494 real changes made)
(233,527 real changes made)
(224,424 real changes made)
(215,378 real changes made)
(206,364 real changes made)
(197,203 real changes made)
(188,002 real changes made)
(178,869 real changes made)
(169,709 real changes made)
(160,768 real changes made)
(151,788 real changes made)
(142,749 real changes made)
(133,753 real changes made)
(124,727 real changes made)
(115,737 real changes made)
(106,785 real changes made)
(97,971 real changes made)
(89,338 real changes made)
(80,703 real changes made)
(72,195 real changes made)
(63,792 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

. egen weights_1 = total(pre_vol), by(upc)

. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(574,134 real changes made)

. replace weights_2 = round(weights_2)
(599,039 real changes made)

. replace weights_3 = round(weights_3)
(548,932 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(599,039 missing values generated)

. replace Merging = 1 if merging == "True"
(217,511 real changes made)

. replace Merging = 0 if merging == "False"
(381,528 real changes made)

117. }
. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
. replace demand_instruments0 = demand_instruments0/distance
(13,350 real changes made, 19 to missing)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. gen month_date = ym(year, month)

 :  :  : Warning:  variance matrix is nonsymmetric or highly singular
. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------

. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(153,293 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------

. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. gen between = 0

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(104,466 real changes made)

. egen weights_2 = total(pre_vol), by(dma_code)

. gen Merging_btw = Merging * between

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(381,528 missing values generated)

. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(600,234 real changes made)

. replace weights_2 = round(weights_2)
(613,462 real changes made)

. replace weights_3 = round(weights_3)
(606,832 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(617,613 missing values generated)

. replace Merging = 1 if merging == "True"
(319,578 real changes made)

. replace Merging = 0 if merging == "False"
(298,035 real changes made)

. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
117. }
. replace demand_instruments0 = demand_instruments0/distance
(14,171 real changes made, 7 to missing)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. bys dma_code: egen mp_share = max(mp_share)
(914 missing values generated)
. gen month_date = ym(year, month)


. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       583
------------------------
. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger

. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(141,396 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
  6. }
(598,880 real changes made)
(598,856 real changes made)
(598,856 real changes made)

. 
. /*Minor post*/
. gen Major = .
(599,039 missing values generated)

. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------
. replace Major = 1 if major_competitor == "True"
(73,338 real changes made)


. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. replace Major = 0 if major_competitor == "False"
(525,701 real changes made)

. gen between = 0

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(114,962 real changes made)

. gen Merging_btw = Merging * between

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. gen HHI_bins = 0

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(343,467 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(248,478 real changes made)

. 
. /*Coarse DHHI Bins*/
. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(111,974 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(100,459 real changes made)

. 
. /*Finer HHI Bins*/
. gen HHI_binsf = 0

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(7,094 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(45,450 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(92,246 real changes made)

. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(112,444 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(93,327 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(248,478 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(54,595 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(27,220 real changes made)

. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(37,356 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(43,720 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(41,071 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(12,937 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(14,246 real changes made)

. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(100,459 real changes made)

. 
. /*HHI and DHHI Bins*/
. gen DHHI_HHI = 0

. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(298,035 missing values generated)

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(331,604 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(277,009 real changes made)

. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(249,789 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(212,433 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(161,063 real changes made)

. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(117,587 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(101,838 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(69,298 real changes made)

. 
. /*Nocke & Whinston Bins*/
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(212,433 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(69,298 real changes made)

. 
. /*Months After and Pre Dummies*/
. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
  3. }
(285,329 real changes made)
(274,628 real changes made)
(262,617 real changes made)
(249,884 real changes made)
(237,307 real changes made)
(224,879 real changes made)
(212,924 real changes made)
(201,027 real changes made)
(189,150 real changes made)
(177,120 real changes made)
(165,227 real changes made)
(153,293 real changes made)
(141,178 real changes made)
(129,251 real changes made)
(117,159 real changes made)
(105,248 real changes made)
(93,413 real changes made)
(81,434 real changes made)
(69,572 real changes made)
(57,828 real changes made)
(46,198 real changes made)
(34,538 real changes made)
(23,104 real changes made)
(11,516 real changes made)

. 
. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
  3. }
(303,294 real changes made)
(293,057 real changes made)
(282,828 real changes made)
(272,432 real changes made)
(262,234 real changes made)
(251,894 real changes made)
(241,574 real changes made)
(230,890 real changes made)
(220,031 real changes made)
(209,244 real changes made)
(198,697 real changes made)
(188,423 real changes made)
(178,370 real changes made)
(168,384 real changes made)
(158,484 real changes made)
(148,884 real changes made)
(139,261 real changes made)
(129,489 real changes made)
(119,636 real changes made)
(109,547 real changes made)
(99,677 real changes made)
(89,899 real changes made)
(80,338 real changes made)
(71,017 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
. bys dma_code: egen mp_share = max(mp_share)

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
  6. }
(617,613 real changes made)
(617,613 real changes made)
(617,613 real changes made)

. 
. /*Minor post*/
. gen Major = .
(617,613 missing values generated)

. replace Major = 1 if major_competitor == "True"
(195,748 real changes made)

. replace Major = 0 if major_competitor == "False"
(421,865 real changes made)

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. gen HHI_bins = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(7,446 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(608,667 real changes made)

. 
. /*Coarse DHHI Bins*/
. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(121,285 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(278,605 real changes made)

. 
. /*Finer HHI Bins*/
. gen HHI_binsf = 0

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(0 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(1,500 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(0 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(1,532 real changes made)

. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(1,235 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(4,679 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(608,667 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(71,348 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(58,934 real changes made)

. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(30,212 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(16,294 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(25,808 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(41,468 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(37,715 real changes made)

. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(278,605 real changes made)

. 
. /*HHI and DHHI Bins*/
. gen DHHI_HHI = 0

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(560,384 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(489,036 real changes made)

. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(430,102 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(399,890 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(383,596 real changes made)

. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(357,788 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(316,320 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(278,605 real changes made)

. 
. /*Nocke & Whinston Bins*/
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(399,890 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(278,605 real changes made)

. 
. /*Months After and Pre Dummies*/
. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
  3. }
(267,336 real changes made)
(255,605 real changes made)
(243,958 real changes made)
(232,270 real changes made)
(220,804 real changes made)
(209,256 real changes made)
(197,811 real changes made)
(186,375 real changes made)
(174,995 real changes made)
(163,609 real changes made)
(152,480 real changes made)
(141,396 real changes made)
(130,308 real changes made)
(119,336 real changes made)
(108,298 real changes made)
(97,293 real changes made)
(86,395 real changes made)
(75,439 real changes made)
(64,542 real changes made)
(53,730 real changes made)
(42,953 real changes made)
(32,075 real changes made)
(21,298 real changes made)
(10,553 real changes made)

. 
. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
  3. }
(338,450 real changes made)
(326,782 real changes made)
(315,123 real changes made)
(303,366 real changes made)
(291,914 real changes made)
(280,473 real changes made)
(269,138 real changes made)
(257,861 real changes made)
(246,530 real changes made)
(235,315 real changes made)
(224,083 real changes made)
(212,742 real changes made)
(201,469 real changes made)
(190,203 real changes made)
(178,878 real changes made)
(167,797 real changes made)
(156,816 real changes made)
(145,754 real changes made)
(134,689 real changes made)
(123,658 real changes made)
(112,964 real changes made)
(102,311 real changes made)
(91,677 real changes made)
(81,029 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
117. }
(27 vars, 2,384,356 obs)

. 
. /*Install Packages*/
. ssc install outreg2
checking outreg2 consistency and verifying not already installed...
all files already exist and are up to date.

. ssc install ftools
checking ftools consistency and verifying not already installed...
all files already exist and are up to date.

. ssc install reghdfe
checking reghdfe consistency and verifying not already installed...
all files already exist and are up to date.

. ssc install estout
checking estout consistency and verifying not already installed...
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
all files already exist and are up to date.

. 
. /* Fixed Effects */
117. }
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
. egen entity_effects = group(upc dma_code)

 :  :  : insufficient observations
r(2001);

end of do-file
r(2001);
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
. egen time_effects = group(year `3')

 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
. egen time_calendar = group(`3')

. 
. /* WEIGHTING SCHEMES */
. gen pre_vol = volume * (1 - post_merger)

. gen weights_0 = 1 /*to add weights that won't change things*/

. egen weights_1 = total(pre_vol), by(upc)

. egen weights_2 = total(pre_vol), by(dma_code)

. egen weights_3 = total(pre_vol), by(upc dma_code)

. replace weights_1 = round(weights_1)
(1,243,008 real changes made)

. replace weights_2 = round(weights_2)
(1,881,063 real changes made)

. replace weights_3 = round(weights_3)
(1,179,090 real changes made)

. 
. /*Post Merger Non Merging*/
. gen Merging = .
(2,384,356 missing values generated)

. replace Merging = 1 if merging == "True"
(410,251 real changes made)

. replace Merging = 0 if merging == "False"
(1,974,105 real changes made)

. gen Non_Merging = (1 - Merging)

. gen Post_Non_Merging = post_merger * (1 - Merging)

. 
. /*Controls*/
. replace demand_instruments0 = demand_instruments0/distance
(2,384,356 real changes made, 4,032 to missing)

. 
. /*Quantity*/
. gen lquant = log(volume)

. 
. rename post_merger_merging Post_Merging

. 
. /*One Year Post*/
. gen month_date = ym(year, month)

. tabstat month_date if (month==`5' & year==`4'), save

    variable |      mean
-------------+----------
  month_date |       575
------------------------

. matrix cutoff_c=r(StatTotal)

. local cutoff_c=cutoff_c[1,1]

. gen after = 0

. replace after = 1 if month_date >= `cutoff_c' + 12
(656,400 real changes made)

. gen Post_Merger_1y = post_merger * after

. gen Post_Merging_1y = Post_Merging * after

. gen Post_Non_Merging_1y = Post_Non_Merging * after

. 
. /*Announced vs Completed*/
. tabstat month_date if (month==`7' & year==`6'), save

    variable |      mean
-------------+----------
  month_date |       574
------------------------

. matrix cutoff_a=r(StatTotal)

. local cutoff_a=cutoff_a[1,1]

. gen between = 0

. replace between = 1 if (month_date >= `cutoff_a' & month_date <= `cutoff_c')
(102,135 real changes made)

. gen Merging_btw = Merging * between

. gen Non_Merging_btw = Non_Merging * between

. 
. /*Untreated*/
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
. bys dma_code: gen mp_shares = sum(shares) if Merging==1
(1,974,105 missing values generated)

. bys dma_code: egen mp_share = max(mp_share)
(12450 missing values generated)

. drop mp_shares

. foreach x in 2 5 10 {
  2. gen Untreated_`x' = 1
  3. replace Untreated_`x' = 0 if mp_share >= `x'/100
  4. gen Post_Merging_Treat_`x' = (1 - Untreated_`x') * Merging * post_merger
  5. gen Post_Non_Merging_Treat_`x' = (1 - Untreated_`x') * Non_Merging * post_
> merger
  6. }
(2,382,611 real changes made)
(2,382,611 real changes made)
(2,382,235 real changes made)

. 
. /*Minor post*/
. gen Major = .
(2,384,356 missing values generated)

. replace Major = 1 if major_competitor == "True"
(671,981 real changes made)

. replace Major = 0 if major_competitor == "False"
(1,712,375 real changes made)

. gen Post_Minor = (1 - Major) * Non_Merging * post_merger

. gen Post_Major = Major * Non_Merging * post_merger

. 
. /*Coarse HHI Bins*/
. gen HHI_bins = 0

. replace HHI_bins = 1 if (post_hhi*10000>1500 & post_hhi*10000<2500)
(1,772,062 real changes made)

. replace HHI_bins = 2 if (post_hhi*10000>2500 & !missing(post_hhi))
(144,973 real changes made)

. 
. /*Coarse DHHI Bins*/
. gen DHHI_bins = 0

. replace DHHI_bins = 1 if (dhhi*10000>100 & dhhi*10000<200)
(0 real changes made)

. replace DHHI_bins = 2 if (dhhi*10000>200 & !missing(dhhi))
(0 real changes made)

. 
. /*Finer HHI Bins*/
. gen HHI_binsf = 0

. replace HHI_binsf = 1 if (post_hhi*10000>=375 & post_hhi*10000<750)
(0 real changes made)

. replace HHI_binsf = 2 if (post_hhi*10000>=750 & post_hhi*10000<1125)
(54,211 real changes made)

. replace HHI_binsf = 3 if (post_hhi*10000>=1125 & post_hhi*10000<1500)
(413,110 real changes made)

. replace HHI_binsf = 4 if (post_hhi*10000>=1500 & post_hhi*10000<1750)
(586,523 real changes made)

. replace HHI_binsf = 5 if (post_hhi*10000>=1750 & post_hhi*10000<2000)
(789,853 real changes made)

. replace HHI_binsf = 6 if (post_hhi*10000>=2000 & post_hhi*10000<2250)
(230,244 real changes made)

. replace HHI_binsf = 7 if (post_hhi*10000>=2250 & post_hhi*10000<2500)
(165,442 real changes made)

. replace HHI_binsf = 8 if (post_hhi*10000>=2500 & !missing(post_hhi))
(144,973 real changes made)

. 
. /*Finer DHHI Bins*/
. gen DHHI_binsf = 0

. replace DHHI_binsf = 1 if (dhhi*10000>=25 & dhhi*10000<50)
(50,914 real changes made)

. replace DHHI_binsf = 2 if (dhhi*10000>=50 & dhhi*10000<75)
(11,669 real changes made)

. replace DHHI_binsf = 3 if (dhhi*10000>=75 & dhhi*10000<100)
(0 real changes made)

. replace DHHI_binsf = 4 if (dhhi*10000>=100 & dhhi*10000<125)
(0 real changes made)

. replace DHHI_binsf = 5 if (dhhi*10000>=125 & dhhi*10000<150)
(0 real changes made)

. replace DHHI_binsf = 6 if (dhhi*10000>=150 & dhhi*10000<175)
(0 real changes made)

. replace DHHI_binsf = 7 if (dhhi*10000>175 & dhhi*10000<200)
(0 real changes made)

. replace DHHI_binsf = 8 if (dhhi*10000>=200 & !missing(dhhi))
(0 real changes made)

. 
. /*HHI and DHHI Bins*/
. gen DHHI_HHI = 0

. replace DHHI_HHI = 1 if (dhhi*10000>=25 & post_hhi*10000>=375)
(62,583 real changes made)

. replace DHHI_HHI = 2 if (dhhi*10000>=50 & post_hhi*10000>=750)
(11,669 real changes made)

. replace DHHI_HHI = 3 if (dhhi*10000>=75 & post_hhi*10000>=1125)
(0 real changes made)

. replace DHHI_HHI = 4 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(0 real changes made)

. replace DHHI_HHI = 5 if (dhhi*10000>=125 & post_hhi*10000>=1750)
(0 real changes made)

. replace DHHI_HHI = 6 if (dhhi*10000>=150 & post_hhi*10000>=2000)
(0 real changes made)

. replace DHHI_HHI = 7 if (dhhi*10000>=175 & post_hhi*10000>=2250)
(0 real changes made)

. replace DHHI_HHI = 8 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000>=2
> 500 & !missing(post_hhi))
(0 real changes made)

. 
. /*Nocke & Whinston Bins*/
. gen DHHI_HHI_NW = 0

. replace DHHI_HHI_NW = 1 if (dhhi*10000>=100 & post_hhi*10000>=1500)
(0 real changes made)

. replace DHHI_HHI_NW = 2 if (dhhi*10000>=200 & !missing(dhhi) & post_hhi*10000
> >2500 & !missing(post_hhi))
(0 real changes made)

. 
. /*Months After and Pre Dummies*/
. gen Months_post = 0

. forv i=1/24{
  2.         replace Months_post = `i' if month_date >= `cutoff_c' + `i'
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
  3. }
(1,213,335 real changes made)
(1,162,454 real changes made)
(1,111,969 real changes made)
(1,061,353 real changes made)
(1,011,135 real changes made)
(960,348 real changes made)
(909,866 real changes made)
(859,380 real changes made)
(808,604 real changes made)
(758,294 real changes made)
(707,864 real changes made)
(656,400 real changes made)
(605,012 real changes made)
(553,720 real changes made)
(503,247 real changes made)
(453,108 real changes made)
(402,964 real changes made)
(352,511 real changes made)
(302,491 real changes made)
(252,503 real changes made)
(202,200 real changes made)
(152,265 real changes made)
(101,676 real changes made)
(50,962 real changes made)

. 
. gen Months_pre = 0

. forv i=1/24{
  2.         replace Months_pre = `i' if month_date <= `cutoff_c' - `i'
  3. }
(1,119,699 real changes made)
(1,068,886 real changes made)
(1,018,948 real changes made)
(968,831 real changes made)
(919,155 real changes made)
(869,367 real changes made)
(819,143 real changes made)
(769,294 real changes made)
(719,379 real changes made)
(669,212 real changes made)
(619,141 real changes made)
(568,859 real changes made)
(519,386 real changes made)
(470,511 real changes made)
(422,648 real changes made)
(374,959 real changes made)
(327,776 real changes made)
(280,118 real changes made)
(233,042 real changes made)
(186,250 real changes made)
(139,232 real changes made)
(92,836 real changes made)
(46,377 real changes made)
(0 real changes made)

. 
. 
. 
. /*Main Routine*/
. foreach var of varlist lprice lquant {
  2. forval x = 0/3 {
  3. quietly{
  4. /*Overall Price Effects*/
. 
. /*Overall Effects*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects) vce(cluster dma_code)
  5. est sto OA_`x'_`var'
  6. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall") replace
  7. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(entity_effects time_calendar) vce(cluster dma_code)
  8. est sto OA_FE_`x'_`var'
  9. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE") append
 10. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging trend [aw = weights_`x'],
>  abs(dma_code##c.trend entity_effects time_calendar) vce(cluster dma_code)
 11. est sto OA_FE_t_`x'_`var'
 12. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t") append
 13. 
. /*Overall Effects Controls*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 14. est sto OA_C_`x'_`var'
 15. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall C") append
 16. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clust
> er dma_code)
 17. est sto OA_FE_C_`x'_`var'
 18. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall FE C") append
 19. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging log_hhinc_per_person_adj 
> demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_c
> alendar) vce(cluster dma_code)
 20. est sto OA_FE_C_t_`x'_`var'
 21. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Overall t C") append
 22. 
. foreach z in 2 5 10 {
 23. /*Overall Effects Untreated*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 24. est sto UT_`x'_`var'_`z'
 25. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated `z'") append
 26. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(clus
> ter dma_code)
 27. est sto UT_FE_`x'_`var'_`z'
 28. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE `z'") append
 29. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' trend [aw = weights_`x'], abs(dma_code##c.trend entity_effects time_
> calendar) vce(cluster dma_code)
 30. est sto UT_T_`x'_`var'_`z'
 31. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T `z'") append
 32. 
. /*Overall Effects Untreated Controls*/
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects) vce(cluster dma_code)
 33. est sto UT_C_`x'_`var'_`z'
 34. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated C `z'") append
 35. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(entit
> y_effects time_calendar) vce(cluster dma_code)
 36. est sto UT_FE_C_`x'_`var'_`z'
 37. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated FE C `z'") append
 38. 
. reghdfe `var' Untreated_`z' Merging Post_Merging_Treat_`z' Post_Non_Merging_T
> reat_`z' log_hhinc_per_person_adj demand* trend [aw = weights_`x'], abs(dma_c
> ode##c.trend entity_effects time_calendar) vce(cluster dma_code)
 39. est sto UT_T_C_`x'_`var'_`z'
 40. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Untreated T C `z'") append
 41. }
 42. *
. 
. /*Overall Effects Major*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects) vce(cluster dma_code)
 43. est sto Maj_`x'_`var'
 44. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor") append
 45. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(entity_effects time_calendar) vce(cluster dma_code)
 46. est sto Maj_FE_`x'_`var'
 47. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE") append
 48. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor trend [aw = we
> ights_`x'], abs(dma_code##c.trend entity_effects time_calendar) vce(cluster d
> ma_code)
 49. est sto Maj_FE_t_`x'_`var'
 50. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t") append
 51. 
. /*Overall Effects Major Controls*/
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects) vce(cluster 
> dma_code)
 52. est sto Maj_C_`x'_`var'
 53. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : MAjor C") append
 54. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(entity_effects time_calendar
> ) vce(cluster dma_code)
 55. est sto Maj_FE_C_`x'_`var'
 56. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major FE C") append
 57. 
. reghdfe `var' Major Merging Post_Major Post_Merging Post_Minor log_hhinc_per_
> person_adj demand* trend [aw = weights_`x'], abs(dma_code##c.trend entity_eff
> ects time_calendar) vce(cluster dma_code)
 58. est sto Maj_FE_t_C_`x'_`var'
 59. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Major t C") append
 60. 
. /*Timing of the Effects on Prices*/
. /*One Year After*/
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code
> )
 61. est sto After_`x'_`var'
 62. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y") append
 63. 
. reghdfe `var' Merging Post_Merging Post_Non_Merging Post_Non_Merging_1y Post_
> Merging_1y trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cl
> uster dma_code)
 64. est sto After_FE_`x'_`var'
 65. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : 1y FE") append
 66. 
. /*Granular Timing for Post Only*/
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects) vce(cluster dm
> a_code)
 67. est sto Tim_`x'_`var'
 68. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing") append
 69. 
. reghdfe `var' Merging Post_Merging#i.Months_post Post_Non_Merging#i.Months_po
> st i.Months_post trend [aw = weights_`x'], abs(entity_effects time_calendar) 
> vce(cluster dma_code)
 70. est sto Tim_FE_`x'_`var'
 71. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing FE") append
 72. 
. /*Granular Timing Pre and Post*/
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 73. est sto Timing_`x'_`var'
 74. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post") append
 75. 
. reghdfe `var' Merging Merging#i.Months_pre Non_Merging#i.Months_pre Post_Merg
> ing#i.Months_post Post_Non_Merging#i.Months_post i.Months_pre i.Months_post t
> rend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dma_co
> de)
 76. est sto Timing_FE_`x'_`var'
 77. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Timing Pre Post FE") append
 78. 
. /*Between Period*/
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 79. est sto Btw_`x'_`var'
 80. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between") append
 81. 
. reghdfe `var' Merging Merging_btw Non_Merging_btw Post_Merging Post_Non_Mergi
> ng trend [aw = weights_`x'], abs(entity_effects time_calendar) vce(cluster dm
> a_code)
 82. est sto Btw_FE_`x'_`var'
 83. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : Between FE") append
 84. 
. /*Interactions of Concentration Measures on Prices*/
. 
. /* HHI Coarse */
. reghdfe `var' Post_Merging#i.HHI_bins Post_Non_Merging#i.HHI_bins i.HHI_bins 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 85. est sto HHI_`x'_`var'
 86. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHI") append
 87. 
. * DHHI Coarse
. reghdfe `var' Post_Merging#i.DHHI_bins Post_Non_Merging#i.DHHI_bins i.DHHI_bi
> ns trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 88. est sto DHHI_`x'_`var'
 89. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI") append
 90. 
. * HHI Fine
. reghdfe `var' Post_Merging#i.HHI_binsf Post_Non_Merging#i.HHI_binsf i.HHI_bin
> sf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 91. est sto HHIf_`x'_`var'
 92. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : HHIf") append
 93. 
. * DHHI Fine
. reghdfe `var' Post_Merging#i.DHHI_binsf Post_Non_Merging#i.DHHI_binsf i.DHHI_
> binsf trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 94. est sto DHHIf_`x'_`var'
 95. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHIf") append
 96. 
. * DHHI & HHI Bins
. reghdfe `var' Post_Merging#i.DHHI_HHI Post_Non_Merging#i.DHHI_HHI i.DHHI_HHI 
> trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
 97. est sto DHHI_HHI_`x'_`var'
 98. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : DHHI_HHI") append
 99. 
. * Nocke & Whinston Regions
. reghdfe `var' Post_Merging#i.DHHI_HHI_NW Post_Non_Merging#i.DHHI_HHI_NW i.DHH
> I_HHI_NW trend [aw = weights_`x'], abs(entity_effects) vce(cluster dma_code)
100. est sto DHHI_HHI_NW_`x'_`var'
101. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : NW") append
102. 
. /*Classic Diff in Diffs*/
. /*Price Effects*/
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects) vce(cluster dma_code)
103. est sto Did_`x'_`var'
104. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did") append
105. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_calendar) vce(cluster dma_code)
106. est sto Did_calendar_`x'_`var'
107. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did calendar") append
108. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(entity_e
> ffects time_effects) vce(cluster dma_code)
109. est sto Did_period_`x'_`var'
110. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did period") append
111. 
. reghdfe `var' Post_Merging post_merger trend [aw = weights_`x'], abs(dma_code
> ##c.trend entity_effects time_calendar) vce(cluster dma_code)
112. est sto Did_t_`x'_`var'
113. outreg2 using `2'/did_int_`var'_`x'.txt, stats(coef se pval) ctitle("`var'
> : did trends") append
114. 
. est clear
115. }
116. }
117. }
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  : insufficient observations
r(2001);

end of do-file
r(2001);
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : Warning
> :  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : Warning
> :  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : Warning:  varianc
> e matrix is nonsymmetric or highly singular
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : Warning
> :  variance matrix is nonsymmetric or highly singular
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : Warning
> :  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : Warning
> :  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
 :  :  :  :  :  : Warning:  variance matrix is nonsymmetric or highly singular
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
 :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>   :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  
> :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
>  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  :  : 
. 
. est clear

. 
. 
. 
. 
. exit, STATA clear
